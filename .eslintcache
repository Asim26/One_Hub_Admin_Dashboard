[{"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\index.js":"1","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\reportWebVitals.js":"2","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\App.js":"3","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Dashboard\\Dashboard.jsx":"4","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Login\\Login.jsx":"5","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\SignUp\\SignUp.jsx":"6","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\reducers\\index.js":"7","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Router.js":"8","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\reducers\\reducer.js":"9","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\actions\\action-types.js":"10","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\actions\\action.js":"11","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Services\\DataService.js":"12","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\constants.js":"13","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Header\\Header.jsx":"14","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\Brands.jsx":"15","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\constant.js":"16","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Services\\data.js":"17","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\BrandInformation.jsx":"18","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\createBrand\\CreateBrand.jsx":"19","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\OptionConstants.js":"20","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\editBrand\\EditBrand.jsx":"21"},{"size":815,"mtime":1612010941284,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1611583295279,"results":"24","hashOfConfig":"23"},{"size":202,"mtime":1611833197384,"results":"25","hashOfConfig":"23"},{"size":171,"mtime":1611762491339,"results":"26","hashOfConfig":"23"},{"size":4903,"mtime":1611762754173,"results":"27","hashOfConfig":"23"},{"size":4132,"mtime":1611583295277,"results":"28","hashOfConfig":"23"},{"size":137,"mtime":1611670932349,"results":"29","hashOfConfig":"23"},{"size":1119,"mtime":1612173562391,"results":"30","hashOfConfig":"23"},{"size":1093,"mtime":1612178831025,"results":"31","hashOfConfig":"23"},{"size":172,"mtime":1612178705547,"results":"32","hashOfConfig":"23"},{"size":464,"mtime":1612178724048,"results":"33","hashOfConfig":"23"},{"size":396,"mtime":1611762491460,"results":"34","hashOfConfig":"23"},{"size":257,"mtime":1611762491456,"results":"35","hashOfConfig":"23"},{"size":6515,"mtime":1611820380461,"results":"36","hashOfConfig":"23"},{"size":6576,"mtime":1612280650262,"results":"37","hashOfConfig":"23"},{"size":483,"mtime":1612279868227,"results":"38","hashOfConfig":"23"},{"size":1608,"mtime":1612279834132,"results":"39","hashOfConfig":"23"},{"size":3226,"mtime":1611864005224,"results":"40","hashOfConfig":"23"},{"size":20666,"mtime":1612173124396,"results":"41","hashOfConfig":"23"},{"size":585,"mtime":1612193765731,"results":"42","hashOfConfig":"23"},{"size":21798,"mtime":1612277868741,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1o4ntbk",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\index.js",["97"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// \r\nimport {createStore,applyMiddleware, compose} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './redux/reducers/index'\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store=createStore(rootReducer,composeEnhancers())\r\n//\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["98","99"],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\reportWebVitals.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\App.js",["100"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport AppRouter from \"./Router\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>     \r\n      <AppRouter/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Dashboard\\Dashboard.jsx",["101"],"import React from \"react\";\r\nimport SideBar from '../SideBar/SideBar'\r\nimport Header from '../Header/Header'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div>\r\n        <Header/>\r\n    </div>\r\n  );\r\n}\r\n","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Login\\Login.jsx",["102","103","104","105"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport {CLIENT_ID} from '../../Utilities/constant';\r\nimport { loginRequest } from \"../../Services/data\";\r\nimport { NETWORK_ERROR } from \"../../Utilities/constant\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        One Hub\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //state variables\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //onChangeEvents\r\n  const emailHandler = (email) => {\r\n    setEmail(email);\r\n  };\r\n\r\n  const passwordHandler = (userPassword) => {\r\n    setPassword(userPassword);\r\n  };\r\n\r\n  //OnSubmitEvents\r\n  const LoginHandler = async(e) => {\r\n    e.preventDefault();\r\n    \r\n    \r\n    if (email !== '' && password !== '') {\r\n      \r\n      let loginObj = {\r\n        email: email,\r\n        password: password,\r\n        client_id: CLIENT_ID,\r\n      };\r\n\r\n      let loginResponse = await loginRequest(loginObj);\r\n\r\n      \r\n      if (loginResponse === NETWORK_ERROR) {\r\n        \r\n      }\r\n      else {\r\n        const status = loginResponse.data.metadata.status;\r\n        \r\n        const userCredentials = loginResponse.data.payload.data.user;\r\n        \r\n\r\n      }\r\n    } \r\n    else \r\n    {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form onSubmit={LoginHandler} className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => {\r\n                emailHandler(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                passwordHandler(e.target.value);\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onSubmit={LoginHandler}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\SignUp\\SignUp.jsx",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\reducers\\index.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Router.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\reducers\\reducer.js",["106"],"import {FETCH_DATA,FETCH_BRAND,CREATE_BRAND,SINGLE_BRAND} from '../actions/action-types';\r\n\r\nconst initialState = {\r\n    fetchUsersData: [],\r\n    brands : [], \r\n    singleBrand :'',\r\n}\r\n\r\nexport default function fetchUsersData(state = initialState, action) {\r\n    \r\n    switch (action.type) {\r\n        case FETCH_DATA:\r\n        console.log('fetch user data reducer',state)\r\n        return {\r\n                ...state,\r\n                fetchUsersData: action.data\r\n        } \r\n        case FETCH_BRAND :\r\n           // console.log(\"action.payload\",action.payload);\r\n            return {\r\n                ... state,\r\n                brands : action.payload\r\n\r\n            }\r\n        case CREATE_BRAND: {\r\n                const newBrand = action.payload;\r\n                return {\r\n                  ...state,\r\n                  createdBrand: newBrand,\r\n                };\r\n          }\r\n        case SINGLE_BRAND:{\r\n          return{\r\n            ...state,\r\n            singleBrand : action.payload\r\n          }  \r\n\r\n        }              \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\actions\\action-types.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\redux\\actions\\action.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Services\\DataService.js",[],["107","108"],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\constants.js",[],["109","110"],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\Header\\Header.jsx",["111"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport BrandingWatermarkIcon from '@material-ui/icons/BrandingWatermark';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport Brands from '../brands/Brands';\r\n\r\nimport './Header.css'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\n const Header=(props)=> {\r\n\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            One Hub Admin\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Import\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Orders\" />\r\n        </ListItem>\r\n       \r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <BarChartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Reports\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DescriptionIcon/>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Products\" />\r\n        </ListItem>\r\n        <Link className = 'Sidebar-btn' to ='/brands'>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <BrandingWatermarkIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Brands\" />\r\n        </ListItem>\r\n        </Link>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"User Feedback\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n          <AttachMoneyIcon/>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Products Sales\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <LoyaltyIcon/>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Commission\" />\r\n        </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n   \r\n        {props.children}\r\n        \r\n       \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\Brands.jsx",["112","113","114"],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\constant.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Services\\data.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\BrandInformation.jsx",["115"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './Brands.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n\r\nconst BrandInformation=(props)=> {\r\n    const classes = useStyles();\r\n    const {brand} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n        <div className= \"BrandInformation-container\">\r\n        <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                Brand Details\r\n        </Typography>\r\n        <div className=\"Information-Grid\">\r\n      <Grid className=\"Information-Grid\" container spacing={3}>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <div><span  className ='Brands-tableHead'>Name :</span> {brand.name}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>On Sale :</span> {brand.on_sale ? <span>yes</span> :<span>No</span>}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Address :</span> {brand.location}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Contract Type :</span> {brand.contract_type}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Sale Percentage :</span> {brand.sale_percentage}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Created Date :</span> {brand.date_created.substring(0,10)}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Updated Date :</span> {brand.date_updated? brand.date_updated.substring(0,10):<span>Not Updated Yet</span>}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Contact No :</span> {brand.contact_no}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Fulfilled By :</span> {brand.fulfilled_by}</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Sale Start Time :</span> {brand.sale_start_time?brand.sale_start_time.substring(0,10):<span>Sale Not Available</span> }</div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <div><span  className ='Brands-tableHead'>Sale End Time :</span> {brand.sale_end_time? brand.sale_end_time.substring(0,10): <span>Sale Not Available</span>}</div>\r\n        </Grid>\r\n\r\n       \r\n\r\n      \r\n      </Grid>\r\n      </div>\r\n    \r\n        <Grid container item xs={12} >\r\n        <Typography variant=\"h5\" x component=\"div\">\r\n                Introduction\r\n        </Typography>\r\n            <p>{brand.brand_introduction}</p>\r\n        </Grid>\r\n      </div>\r\n      \r\n    </div>);\r\n}\r\n\r\nexport default BrandInformation;\r\n","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\createBrand\\CreateBrand.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useState} from \"react\";\r\nimport {categoryOptions,fullFilledByOptions} from '../../../Utilities/OptionConstants';\r\nimport {NETWORK_ERROR} from '../../../Utilities/constant'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {createBrandRequest} from '../../../Services/data';\r\nimport Creatable from 'react-select/creatable';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\n\r\n\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n    formControl: {\r\n       margin: theme.spacing(1),\r\n    minWidth: 260,\r\n    maxWidth: 310,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CreateBrand=props =>{\r\n\r\n    const history = useHistory();\r\n\r\n   \r\n    const classes = useStyles();\r\n    \r\n    const [ BrandsInputsState, setBrandsInputsState] = useState({\r\n        brandsInputs:{\r\n          name: \"\",\r\n          location: \"\",\r\n          website: \"\",\r\n          contract_type: \"\",\r\n          sale_percentage: \"\",\r\n          start_time:\"\",\r\n          end_time:\"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          minimum_orders: \"\",\r\n          commission_percentage: \"\",\r\n          sale_start_time:\"\",\r\n          sale_end_time: \"\",\r\n          brand_introduction:\"\",\r\n          contact_no: \"\"\r\n        }\r\n      })\r\n\r\n    \r\n    const [onSale, setOnSale] = useState(\"false\")  \r\n    const [multipleBrand, setMultipleBrand] = useState(false)\r\n    const [selectedMultiBrand, setSelectedMultiBrand] = useState([])\r\n    const [selectedBranches, setSelectedBranches] = useState([]); \r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    const [subCategoryFlag, setSubCategoryFlag] = useState(false);\r\n    const [selectedSubCategory, setSelectedSubCategory] = useState([]);\r\n    const [fullFilled, setFullFilled] = useState(\"\")\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        const brandsInputs   = BrandsInputsState.brandsInputs;\r\n        setBrandsInputsState({\r\n          brandsInputs:{\r\n            ...brandsInputs,\r\n            [name]: value\r\n          }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const handleBranches = (event, productItems) => {\r\n        var array = [];\r\n        if (event === null) {\r\n          setSelectedBranches(array)\r\n        } else {\r\n          event.forEach(function (item) {\r\n            array.push(item.label);\r\n          });\r\n          setSelectedBranches(array)\r\n        }\r\n      };\r\n\r\n      const handleCities = (event, productItems) => {\r\n        var array = [];\r\n        if (event === null) {\r\n          setSelectedCities(array)\r\n        } else {\r\n          event.forEach(function (item) {\r\n            array.push(item.label);\r\n          });\r\n          setSelectedCities(array);\r\n        }\r\n      };\r\n    \r\n      const handleCategories = (event) => {\r\n\r\n        var array = [];\r\n        let value=\"\";\r\n        if (event === null) {\r\n          setSelectedCategories(array);\r\n        } else {\r\n          event.forEach(function (item) {\r\n            array.push(item.label);\r\n          });\r\n          value= array[array.length-1];\r\n          setSelectedCategories(array)\r\n        }\r\n         isCategoryOption(value)\r\n      };\r\n\r\n      \r\n  const isCategoryOption =(value) =>{\r\n    categoryOptions.map((category) =>{\r\n      if(category.label === value){\r\n        // setCategoryValue(value);\r\n        setSubCategoryFlag(true)\r\n      }\r\n    })\r\n  }\r\n      \r\n    \r\n  const handleSubCategories = (event) => {\r\n      \r\n      var array = [];\r\n    if (event === null) {\r\n      setSelectedSubCategory(event)\r\n    } else {\r\n        event.forEach(function (item) {\r\n            array.push(item.label);\r\n       \r\n      })\r\n      setSelectedSubCategory(array)\r\n        \r\n    }\r\n}\r\n    const multipleBrandHandler = (event, productItems) => {\r\n        var array = [];\r\n        if (event === null) {\r\n          setSelectedMultiBrand(array)\r\n        } else {\r\n          event.forEach(function (item) {\r\n            array.push(item.label);\r\n            \r\n          });\r\n          setSelectedMultiBrand(array)\r\n        }\r\n      };\r\n\r\n    const timingsHandler = (time) =>{\r\n       \r\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n      \r\n        if (time.length > 1) { \r\n          time = time.slice (1); \r\n          time[5] = +time[0] < 12 ? ' AM' : ' PM'; \r\n          time[0] = +time[0] % 12 || 12; \r\n        }\r\n        return time.join (''); \r\n    }\r\n    \r\n    \r\n  const validateForm = (brands) =>{\r\n    if(brands.name.length === 0 || brands.email.length === 0 || brands.password.lenth===0|| brands.location.length === 0 || \r\n      brands.branches.length===0 || brands.cities.length === 0  ||\r\n      brands.categories.length===0 ||brands.allow_multiple_brands.length === 0||\r\n      (brands.allow_multiple_brands && brands.multiple_brands.length === 0) ||\r\n      brands.timings.length < 15 || brands.fulfilled_by.length === 0 ||\r\n      brands.contract_type.length === 0 || brands.on_sale.length === 0 || (brands.on_sale && (brands.sale_end_time.length === 0 || brands.sale_start_time.length===0)) ||\r\n      brands.sale_percentage.length === 0 || brands.minimum_orders.length === 0 || \r\n      brands.commission_percentage.length === 0 || brands.brand_introduction.length=== 0 \r\n      || brands.contact_no.length === 0\r\n      )\r\n      return false\r\n    else \r\n      return true\r\n  }\r\n\r\n\r\n\r\n    const submitHandler =async (event)=>{\r\n       \r\n        event.preventDefault();\r\n        let brandInputs = BrandsInputsState.brandsInputs;\r\n        let start_time=\"\", end_time=\"\";\r\n        start_time = timingsHandler(brandInputs.start_time);\r\n        end_time = timingsHandler(brandInputs.end_time);\r\n        let timings = start_time + \" to \" + end_time;\r\n        let brands={\r\n            email: brandInputs.email,\r\n            password: brandInputs.password,\r\n            name: brandInputs.name,\r\n            location: brandInputs.location,\r\n            branches: selectedBranches, \r\n            cities: selectedCities, \r\n            categories: selectedCategories, \r\n            sub_categories: selectedSubCategory,\r\n            website: brandInputs.website, \r\n            timings: timings, \r\n            contract_type: brandInputs.contract_type,\r\n            on_sale: onSale,\r\n            sale_percentage: brandInputs.sale_percentage,\r\n            contact_no: brandInputs.contact_no,\r\n            minimum_orders: brandInputs.minimum_orders,\r\n            commission_percentage: brandInputs.commission_percentage,\r\n            allow_multiple_brands: multipleBrand,\r\n            multiple_brands: selectedMultiBrand,\r\n            sale_start_time: brandInputs.sale_start_time,\r\n            sale_end_time: brandInputs.sale_end_time,\r\n            brand_introduction: brandInputs.brand_introduction,\r\n            fulfilled_by: fullFilled,\r\n        }\r\n\r\n\r\n\r\n        let valuesValidation= validateForm(brands); \r\n\r\n        const token = \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InN0YXR1cyI6IkFjdGl2ZSIsIl9pZCI6IjVmMmVmOTZkNWEwOWM1MzUyY2E1NmNkMSIsImVtYWlsIjoiYWRtaW5AeWFob28uY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkY1BaSkxoc3dLSndiaHF5aWJ6TGIwZTh6S05mVFFpcHdieE55L1Uyd25rS3ZIOHhnallsZUMiLCJyb2xlIjoiU3VwZXJBZG1pbiIsImFkZGVkX2RhdGUiOiIyMDIwLTA4LTA4VDE5OjEzOjQ5LjMyNVoiLCJfX3YiOjB9LCJpYXQiOjE2MTE2NTExMzYsImF1ZCI6ImFkbWluIiwiaXNzIjoibm9kZV9iYWNrZW5kIiwic3ViIjoiYWRtaW5AeWFob28uY29tIn0.K8BSSZ3d4MZcrmWwWcC6cnzqOZqluqopugCTKEWfv_tQ1KjcooH2k3G10NhHeoolniT-Prc2w2ZI7scSofueJw\";\r\n\r\n\r\n        if(valuesValidation === true){\r\n\r\n          let createBrandResponse = await createBrandRequest(brands,token);\r\n          console.log(\"281: \",createBrandResponse);\r\n\r\n          if (createBrandResponse === NETWORK_ERROR) {\r\n           \r\n            alert(NETWORK_ERROR);\r\n          }else{\r\n            const status = createBrandResponse.data.metadata.status;\r\n            history.push('./brands');\r\n          } \r\n          \r\n        }\r\n\r\n            \r\n      \r\n\r\n    }\r\n\r\n      \r\n\r\n      return (\r\n\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Create Brand\r\n            </Typography>\r\n\r\n\r\n            <form onSubmit ={submitHandler} className={classes.form} noValidate>\r\n\r\n              <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Name\"\r\n                    autoFocus\r\n                    onChange={onChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label= \"Email\"\r\n                    name=\"email\"\r\n                    onChange={onChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    onChange={onChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Address\"\r\n                    type=\"text\"\r\n                    name = \"location\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>      \r\n                    \r\n                  \r\n                <Creatable style={{height:'200px'}}\r\n                    isClearable\r\n                    isMulti\r\n                    placeholder = 'Branches*'\r\n                    onChange={handleBranches}\r\n                />\r\n                \r\n                </Grid> \r\n\r\n                <Grid item xs={12} sm={6}>      \r\n                <Creatable\r\n                    isClearable\r\n                    isMulti\r\n                    placeholder = 'Cities*'\r\n                    onChange={handleCities}\r\n                  />\r\n                \r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={6}>    \r\n                    <Creatable\r\n                      isClearable\r\n                      options={categoryOptions}\r\n                      isMulti\r\n                      placeholder =\"Categories\"\r\n                      onChange={(e)=>{\r\n                        setSubCategoryFlag(false)\r\n                        handleCategories(e)\r\n                      }\r\n                      }\r\n                    />\r\n                \r\n                </Grid>\r\n\r\n                {subCategoryFlag? (<Grid item xs={12} sm={6}>    \r\n                    <Creatable\r\n                      isClearable\r\n                      isMulti\r\n                      placeholder =\"Sub Categories*\"\r\n                      onChange={\r\n                      \r\n                        handleSubCategories\r\n                      }\r\n                      \r\n                    />\r\n                \r\n                </Grid>): (<Grid item xs={12} sm={6}></Grid>) }\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Start Time\"\r\n                    type=\"time\"\r\n                    name = \"start_time\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"End Time\"\r\n                    type=\"time\"\r\n                    name = \"end_time\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Contact No\"\r\n                    type=\"number\"\r\n                    name = \"contact_no\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Contract Type\"\r\n                    type=\"text\"\r\n                    name = \"contract_type\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Sale Percentage\"\r\n                    type=\"number\"\r\n                    name = \"sale_percentage\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Minimum Orders\"\r\n                    type=\"number\"\r\n                    name = \"minimum_orders\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Commission Percentage\"\r\n                    type=\"number\"\r\n                    name = \"commission_percentage\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Website\"\r\n                    type=\"text\"\r\n                    name = \"website\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} >\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Fulfilled By</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n    \r\n        value = {fullFilled}\r\n          onChange={(event) => {\r\n             setFullFilled(event.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value = \"Onehub\"  label =\"Onehub\">Onehub</MenuItem>\r\n          <MenuItem value = \"Brand\"  label =\"Brand\">Brand</MenuItem>\r\n         \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">On Sale</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n        value = {onSale}\r\n          onChange={(event) => {\r\n             setOnSale(event.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value = \"true\"  label =\"Yes\">Yes</MenuItem>\r\n          <MenuItem value = \"false\"  label =\"No\">No</MenuItem>\r\n         \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n      { onSale === 'true' ? (\r\n      \r\n      <Grid container>  \r\n            <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Sale Start Time\"\r\n              type=\"date\"\r\n              name = \"sale_start_time\"\r\n              onChange={onChange}\r\n             />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Sale End Time\"\r\n              type=\"date\"\r\n              name = \"sale_end_time\"\r\n              onChange={onChange}\r\n             />\r\n            </Grid>\r\n           \r\n            </Grid>\r\n      ):(<div></div>) }\r\n\r\n\r\n\r\n    <Grid item xs={12} sm={6} >\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Multiple Brands</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n    \r\n          value = {multipleBrand}\r\n          onChange={(event) => {\r\n             const value = event.target.value == 'true' ? true:false;\r\n             setMultipleBrand(value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value = 'true'  label =\"Allowed\">Allowed</MenuItem>\r\n          <MenuItem value = 'false'  label =\"Not Allowed\">Not Allowed</MenuItem>\r\n         \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n      {multipleBrand === true? (\r\n\r\n<Grid item xs={12} sm={6}>      \r\n<Creatable\r\n    isClearable\r\n    isMulti\r\n    placeholder = 'add brands*'\r\n    onChange={multipleBrandHandler}\r\n  />\r\n\r\n</Grid>\r\n\r\n\r\n      ):(<Grid item xs={12} sm={6}></Grid>)}\r\n\r\n\r\n                <Grid item xs={12} >\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Brand Introduction\"\r\n                    type=\"textarea\"\r\n                    name = \"brand_introduction\"\r\n                    onChange={onChange}\r\n                   />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n              <Button\r\n              style={{backgroundColor :'lightgreen',color :'white'}}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              </Grid>\r\n\r\n              </Grid>\r\n           \r\n            </form>\r\n\r\n\r\n          </div>\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\n  export default CreateBrand;","D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\Utilities\\OptionConstants.js",[],"D:\\LUMINOGICS\\One_Hub_Admin_Dashboard\\src\\components\\brands\\editBrand\\EditBrand.jsx",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],{"ruleId":"158","severity":1,"message":"159","line":7,"column":21,"nodeType":"160","messageId":"161","endLine":7,"endColumn":36},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"158","severity":1,"message":"166","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":12},{"ruleId":"158","severity":1,"message":"167","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"168","line":59,"column":10,"nodeType":"160","messageId":"161","endLine":59,"endColumn":19},{"ruleId":"158","severity":1,"message":"169","line":59,"column":21,"nodeType":"160","messageId":"161","endLine":59,"endColumn":33},{"ruleId":"158","severity":1,"message":"170","line":90,"column":15,"nodeType":"160","messageId":"161","endLine":90,"endColumn":21},{"ruleId":"158","severity":1,"message":"171","line":92,"column":15,"nodeType":"160","messageId":"161","endLine":92,"endColumn":30},{"ruleId":"172","severity":1,"message":"173","line":21,"column":20,"nodeType":"174","messageId":"175","endLine":21,"endColumn":21,"fix":"176"},{"ruleId":"162","replacedBy":"177"},{"ruleId":"164","replacedBy":"178"},{"ruleId":"162","replacedBy":"179"},{"ruleId":"164","replacedBy":"180"},{"ruleId":"158","severity":1,"message":"167","line":32,"column":8,"nodeType":"160","messageId":"161","endLine":32,"endColumn":14},{"ruleId":"158","severity":1,"message":"181","line":19,"column":8,"nodeType":"160","messageId":"161","endLine":19,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":112,"column":12,"nodeType":"184","endLine":122,"endColumn":3},{"ruleId":"182","severity":1,"message":"185","line":122,"column":5,"nodeType":"186","endLine":122,"endColumn":7,"suggestions":"187"},{"ruleId":"158","severity":1,"message":"188","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":13},{"ruleId":"158","severity":1,"message":"189","line":2,"column":25,"nodeType":"160","messageId":"161","endLine":2,"endColumn":44},{"ruleId":"158","severity":1,"message":"190","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":24},{"ruleId":"158","severity":1,"message":"191","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":12},{"ruleId":"158","severity":1,"message":"192","line":13,"column":8,"nodeType":"160","messageId":"161","endLine":13,"endColumn":11},{"ruleId":"158","severity":1,"message":"193","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":24},{"ruleId":"158","severity":1,"message":"194","line":17,"column":8,"nodeType":"160","messageId":"161","endLine":17,"endColumn":12},{"ruleId":"158","severity":1,"message":"195","line":18,"column":22,"nodeType":"160","messageId":"161","endLine":18,"endColumn":30},{"ruleId":"158","severity":1,"message":"196","line":19,"column":8,"nodeType":"160","messageId":"161","endLine":19,"endColumn":13},{"ruleId":"158","severity":1,"message":"197","line":23,"column":8,"nodeType":"160","messageId":"161","endLine":23,"endColumn":20},{"ruleId":"158","severity":1,"message":"198","line":25,"column":8,"nodeType":"160","messageId":"161","endLine":25,"endColumn":16},{"ruleId":"158","severity":1,"message":"199","line":26,"column":8,"nodeType":"160","messageId":"161","endLine":26,"endColumn":12},{"ruleId":"158","severity":1,"message":"200","line":32,"column":10,"nodeType":"160","messageId":"161","endLine":32,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":171,"column":36,"nodeType":"184","messageId":"203","endLine":171,"endColumn":38},{"ruleId":"158","severity":1,"message":"170","line":287,"column":19,"nodeType":"160","messageId":"161","endLine":287,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":590,"column":47,"nodeType":"206","messageId":"207","endLine":590,"endColumn":49},{"ruleId":"158","severity":1,"message":"189","line":3,"column":27,"nodeType":"160","messageId":"161","endLine":3,"endColumn":46},{"ruleId":"158","severity":1,"message":"208","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":23},{"ruleId":"158","severity":1,"message":"209","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":28},{"ruleId":"158","severity":1,"message":"190","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":24},{"ruleId":"158","severity":1,"message":"191","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":12},{"ruleId":"158","severity":1,"message":"192","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":11},{"ruleId":"158","severity":1,"message":"193","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":24},{"ruleId":"158","severity":1,"message":"194","line":18,"column":8,"nodeType":"160","messageId":"161","endLine":18,"endColumn":12},{"ruleId":"158","severity":1,"message":"195","line":19,"column":22,"nodeType":"160","messageId":"161","endLine":19,"endColumn":30},{"ruleId":"158","severity":1,"message":"196","line":20,"column":8,"nodeType":"160","messageId":"161","endLine":20,"endColumn":13},{"ruleId":"158","severity":1,"message":"197","line":24,"column":8,"nodeType":"160","messageId":"161","endLine":24,"endColumn":20},{"ruleId":"158","severity":1,"message":"198","line":26,"column":8,"nodeType":"160","messageId":"161","endLine":26,"endColumn":16},{"ruleId":"158","severity":1,"message":"210","line":27,"column":8,"nodeType":"160","messageId":"161","endLine":27,"endColumn":20},{"ruleId":"158","severity":1,"message":"199","line":28,"column":8,"nodeType":"160","messageId":"161","endLine":28,"endColumn":12},{"ruleId":"158","severity":1,"message":"211","line":29,"column":10,"nodeType":"160","messageId":"161","endLine":29,"endColumn":28},{"ruleId":"158","severity":1,"message":"212","line":29,"column":30,"nodeType":"160","messageId":"161","endLine":29,"endColumn":53},{"ruleId":"158","severity":1,"message":"200","line":32,"column":10,"nodeType":"160","messageId":"161","endLine":32,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":167,"column":22,"nodeType":"184","messageId":"203","endLine":167,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":173,"column":20,"nodeType":"184","messageId":"203","endLine":173,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":179,"column":24,"nodeType":"184","messageId":"203","endLine":179,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":186,"column":28,"nodeType":"184","messageId":"203","endLine":186,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":196,"column":29,"nodeType":"184","messageId":"203","endLine":196,"endColumn":31},{"ruleId":"182","severity":1,"message":"213","line":204,"column":5,"nodeType":"186","endLine":204,"endColumn":7,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"202","line":300,"column":34,"nodeType":"184","messageId":"203","endLine":300,"endColumn":36},{"ruleId":"158","severity":1,"message":"215","line":406,"column":7,"nodeType":"160","messageId":"161","endLine":406,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":640,"column":42,"nodeType":"206","messageId":"207","endLine":640,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":696,"column":44,"nodeType":"206","messageId":"207","endLine":696,"endColumn":46},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","no-native-reassign",["216"],"no-negated-in-lhs",["217"],"'logo' is defined but never used.","'Brands' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'status' is assigned a value but never used.","'userCredentials' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"218","text":"219"},["216"],["217"],["216"],["217"],"'Typography' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["220"],"'Paper' is defined but never used.","'fullFilledByOptions' is defined but never used.","'FormControlLabel' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'clsx' is defined but never used.","'useTheme' is defined but never used.","'Input' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'Chip' is defined but never used.","'getStyles' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NETWORK_ERROR' is defined but never used.","'createBrandRequest' is defined but never used.","'DateFnsUtils' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'BrandsInputsState.brandsInputs', 'branchesOptions', 'categoriesOptions', 'citiesOptions', 'defaultEndTime', 'defaultStartTime', 'multipleBrandOptions', and 'props'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBrandsInputsState' needs the current value of 'defaultStartTime'.",["221"],"'valuesValidation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[606,607],"",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [props]",{"range":"226","text":"227"},"Update the dependencies array to be: [BrandsInputsState.brandsInputs, branchesOptions, categoriesOptions, citiesOptions, defaultEndTime, defaultStartTime, multipleBrandOptions, props]",{"range":"228","text":"229"},[4909,4911],"[props]",[6066,6068],"[BrandsInputsState.brandsInputs, branchesOptions, categoriesOptions, citiesOptions, defaultEndTime, defaultStartTime, multipleBrandOptions, props]"]
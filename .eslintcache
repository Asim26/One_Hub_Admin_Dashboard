[{"F:\\Luminogics\\onehubadmin\\src\\index.js":"1","F:\\Luminogics\\onehubadmin\\src\\reportWebVitals.js":"2","F:\\Luminogics\\onehubadmin\\src\\App.js":"3","F:\\Luminogics\\onehubadmin\\src\\components\\login\\login.jsx":"4","F:\\Luminogics\\onehubadmin\\src\\components\\login\\Login.jsx":"5","F:\\Luminogics\\onehubadmin\\src\\components\\Login\\Login.jsx":"6","F:\\Luminogics\\onehubadmin\\src\\components\\SignUp\\SignUp.jsx":"7","F:\\Luminogics\\onehubadmin\\src\\components\\Dashboard\\Dashboard.jsx":"8","F:\\Luminogics\\onehubadmin\\src\\components\\SideBar\\SideBar.jsx":"9","F:\\Luminogics\\onehubadmin\\src\\components\\Header\\Header.jsx":"10","F:\\Luminogics\\onehubadmin\\src\\Components\\Login\\Login.jsx":"11","F:\\Luminogics\\onehubadmin\\src\\Components\\SignUp\\SignUp.jsx":"12","F:\\Luminogics\\onehubadmin\\src\\Components\\Dashboard\\Dashboard.jsx":"13","F:\\Luminogics\\onehubadmin\\src\\Components\\SideBar\\SideBar.jsx":"14","F:\\Luminogics\\onehubadmin\\src\\Components\\Header\\Header.jsx":"15","F:\\Luminogics\\onehubadmin\\src\\Router.js":"16","F:\\Luminogics\\onehubadmin\\src\\Redux\\reducers\\index.js":"17","F:\\Luminogics\\onehubadmin\\src\\Redux\\reducers\\reducer.js":"18","F:\\Luminogics\\onehubadmin\\src\\Redux\\actions\\action-types.js":"19","F:\\Luminogics\\onehubadmin\\src\\Utilities\\constants.js":"20","F:\\Luminogics\\onehubadmin\\src\\Services\\dataService.js":"21","F:\\Luminogics\\onehubadmin\\src\\Redux\\actions\\action.js":"22","F:\\Luminogics\\onehubadmin\\src\\Components\\Products\\Products.jsx":"23","F:\\Luminogics\\onehubadmin\\src\\Components\\Orders\\Orders.jsx":"24","F:\\Luminogics\\onehubadmin\\src\\Components\\Products\\CreateProduct.jsx":"25"},{"size":827,"mtime":1611804967551,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":188,"mtime":1611693411736,"results":"29","hashOfConfig":"27"},{"size":3491,"mtime":1611619348461,"results":"30","hashOfConfig":"27"},{"size":3491,"mtime":1611619348461,"results":"31","hashOfConfig":"27"},{"size":3491,"mtime":1611619348461,"results":"32","hashOfConfig":"27"},{"size":4132,"mtime":1611627138809,"results":"33","hashOfConfig":"27"},{"size":213,"mtime":1611626989330,"results":"34","hashOfConfig":"27"},{"size":2257,"mtime":1611627131086,"results":"35","hashOfConfig":"27"},{"size":5433,"mtime":1611627106034,"results":"36","hashOfConfig":"27"},{"size":7231,"mtime":1611817266805,"results":"37","hashOfConfig":"27"},{"size":4132,"mtime":1611627138809,"results":"38","hashOfConfig":"27"},{"size":3484,"mtime":1611888430852,"results":"39","hashOfConfig":"27"},{"size":2540,"mtime":1612002330273,"results":"40","hashOfConfig":"27"},{"size":5322,"mtime":1612209123337,"results":"41","hashOfConfig":"27"},{"size":972,"mtime":1612208830929,"results":"42","hashOfConfig":"27"},{"size":133,"mtime":1611822899758,"results":"43","hashOfConfig":"27"},{"size":823,"mtime":1612002280103,"results":"44","hashOfConfig":"27"},{"size":252,"mtime":1611952074974,"results":"45","hashOfConfig":"27"},{"size":794,"mtime":1611792977215,"results":"46","hashOfConfig":"27"},{"size":3327,"mtime":1611874473245,"results":"47","hashOfConfig":"27"},{"size":560,"mtime":1611954017489,"results":"48","hashOfConfig":"27"},{"size":4113,"mtime":1612222658065,"results":"49","hashOfConfig":"27"},{"size":5725,"mtime":1612002106287,"results":"50","hashOfConfig":"27"},{"size":10803,"mtime":1612235559063,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"dypq8z",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Luminogics\\onehubadmin\\src\\index.js",["113"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// \nimport {createStore,applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './Redux/reducers/index'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store=createStore(rootReducer,composeEnhancers())\n\nconsole.log(\"store=> \",store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["114","115"],"F:\\Luminogics\\onehubadmin\\src\\reportWebVitals.js",[],"F:\\Luminogics\\onehubadmin\\src\\App.js",["116"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport AppRouter from \"./Router\";\n\nfunction App() {\n  return (\n    <div>     \n      <AppRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\Luminogics\\onehubadmin\\src\\components\\login\\login.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\components\\login\\Login.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\components\\Login\\Login.jsx",[],["117","118"],"F:\\Luminogics\\onehubadmin\\src\\components\\SignUp\\SignUp.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\components\\Dashboard\\Dashboard.jsx",["119"],"import React from \"react\";\r\nimport SideBar from '../SideBar/SideBar'\r\nimport Header from '../Header/Header'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div>\r\n        <Header/>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Luminogics\\onehubadmin\\src\\components\\SideBar\\SideBar.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\components\\Header\\Header.jsx",["120","121","122","123","124","125"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Dashboard\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <SideBar />\r\n          <Divider />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}></Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Luminogics\\onehubadmin\\src\\Components\\Login\\Login.jsx",["126","127","128"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { CLIENT_ID } from \"../../Utilities/constants\";\r\n\r\nimport { loginRequest,\r\n   fetchOrderSummaryRequest,\r\n   listProductRequest,\r\n   fetchOrdersRequest,\r\n   FetchBrandRequest,\r\n   userFeedbackRequest } \r\n   from \"../../Services/dataService\";\r\n\r\n   import { NETWORK_ERROR } from \"../../Utilities/constants\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginSuccess,fetchOrderSummary } from \"../../Redux/actions/action\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        One Hub\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //state variables\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //onChangeEvents\r\n  const emailHandler = (email) => {\r\n    setEmail(email);\r\n  };\r\n\r\n  const passwordHandler = (userPassword) => {\r\n    setPassword(userPassword);\r\n  };\r\n\r\n  //OnSubmitEvents\r\n  const LoginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email !== \"\" && password !== \"\") {\r\n      let loginObj = {\r\n        email: email,\r\n        password: password,\r\n        client_id: CLIENT_ID,\r\n      };\r\n\r\n      //API CALL\r\n      let loginResponse = await loginRequest(loginObj);\r\n\r\n      //EXTRACTED ROLE & TOKEN FROM API\r\n      const role = loginResponse.data.payload.data.admin.role;\r\n      const token = loginResponse.data.payload.data.token;\r\n      \r\n      //CHECKING LOGIN RESPONSE \r\n\r\n      if (loginResponse === NETWORK_ERROR) {\r\n        //LOGIN RESPONSE IF SECTION\r\n\r\n      } \r\n      else\r\n      {\r\n        //LOGIN RESPONSE ELSE SECTION\r\n        const status = loginResponse.data.metadata.status;\r\n        if (status === \"SUCCESS\") {\r\n          props.loginSuccess(loginResponse);\r\n\r\n          if(role === 'SuperAdmin'){\r\n            //ROLE IF\r\n            const obj = {\r\n              days: \"7\",\r\n            };\r\n\r\n            const orderSummaryResponse = await fetchOrderSummaryRequest(obj,token);\r\n            if (orderSummaryResponse === NETWORK_ERROR) {\r\n\r\n            } else {\r\n                // props.fetchOrderSummary(orderSummaryResponse);\r\n            }\r\n\r\n            const productResponse = await listProductRequest(token);\r\n            if (productResponse === NETWORK_ERROR) {\r\n             \r\n            } else {\r\n              \r\n\r\n            }\r\n\r\n            const ordersResponse = await fetchOrdersRequest(token);\r\n            if (ordersResponse === NETWORK_ERROR) {\r\n              \r\n            } else {\r\n              \r\n              \r\n            }\r\n\r\n            const brandResponse = await FetchBrandRequest(token);\r\n            if (brandResponse === NETWORK_ERROR) {\r\n\r\n            } \r\n            else {\r\n              \r\n            }\r\n\r\n\r\n            const feedbackResponse = await userFeedbackRequest(token);\r\n            if (feedbackResponse === NETWORK_ERROR) {\r\n              \r\n            } \r\n            else{\r\n              \r\n            }\r\n\r\n            \r\n\r\n          }\r\n          else if(role === \"ADMIN\"){\r\n            //ELSE IF ROLE\r\n\r\n          }\r\n         \r\n        }\r\n        else{\r\n          // ELSE STATUS\r\n        } \r\n      }\r\n\r\n    }\r\n   else \r\n   {\r\n      //ELSE OF 1ST IF\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form onSubmit={LoginHandler} className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => {\r\n                emailHandler(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => {\r\n                passwordHandler(e.target.value);\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onSubmit={LoginHandler}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginSuccess: (userData) => dispatch(loginSuccess(userData)),\r\n  //   fetchOrderSummary: (orderSummaryData) =>\r\n  //     dispatch(fetchOrderSummary(orderSummaryData)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n// export default Login;\r\n","F:\\Luminogics\\onehubadmin\\src\\Components\\SignUp\\SignUp.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\Components\\Dashboard\\Dashboard.jsx",["129","130"],"import React, { useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { fetchOrderSummaryRequest } from \"../../Services/dataService\";\r\nimport { NETWORK_ERROR } from \"../../Utilities/constants\";\r\nimport { fetchOrderSummary } from \"../../Redux/actions/action\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(async () => {\r\n    const token =\r\n        \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InN0YXR1cyI6IkFjdGl2ZSIsIl9pZCI6IjVmMmVmOTZkNWEwOWM1MzUyY2E1NmNkMSIsImVtYWlsIjoiYWRtaW5AeWFob28uY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkY1BaSkxoc3dLSndiaHF5aWJ6TGIwZTh6S05mVFFpcHdieE55L1Uyd25rS3ZIOHhnallsZUMiLCJyb2xlIjoiU3VwZXJBZG1pbiIsImFkZGVkX2RhdGUiOiIyMDIwLTA4LTA4VDE5OjEzOjQ5LjMyNVoiLCJfX3YiOjB9LCJpYXQiOjE2MTE3NTM3NTcsImF1ZCI6ImFkbWluIiwiaXNzIjoibm9kZV9iYWNrZW5kIiwic3ViIjoiYWRtaW5AeWFob28uY29tIn0.Al0uRnNcrAK8GZumRVbMgS1O8buvmZL2mGmnSueyIWSyi4MX0HaRe9oFH9jLLSzDdSR1cAz-NZxdydAHKRYTLg\",\r\n      obj = {\r\n        days: \"7\",\r\n      };\r\n\r\n    const orderSummaryResponse = await fetchOrderSummaryRequest(obj, token);\r\n    if (orderSummaryResponse === NETWORK_ERROR) {\r\n      alert(\"NETWORK ERROR\");\r\n    } else {\r\n      props.fetchOrderSummary(orderSummaryResponse.data.payload.data.orderList);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h2 style={{ align: \"center\" }}>Order Summary</h2>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n                <TableCell align=\"right\">Status</TableCell>\r\n                <TableCell align=\"right\">Date Created</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.orderSummary.map((ordersSummary) => (\r\n                <TableRow key={ordersSummary.order_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {ordersSummary.order_id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {ordersSummary.total_price}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{ordersSummary.status}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {ordersSummary.date_created}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orderSummary: state.myReducerOne.orderSummary,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchOrderSummary: (orderSummaryData) =>\r\n      dispatch(fetchOrderSummary(orderSummaryData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","F:\\Luminogics\\onehubadmin\\src\\Components\\SideBar\\SideBar.jsx",[],"F:\\Luminogics\\onehubadmin\\src\\Components\\Header\\Header.jsx",["131","132"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              {/* title */}\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n\r\n          \r\n          <SideBar />\r\n          <Divider />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {props.children}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Luminogics\\onehubadmin\\src\\Router.js",[],"F:\\Luminogics\\onehubadmin\\src\\Redux\\reducers\\index.js",[],"F:\\Luminogics\\onehubadmin\\src\\Redux\\reducers\\reducer.js",[],"F:\\Luminogics\\onehubadmin\\src\\Redux\\actions\\action-types.js",[],"F:\\Luminogics\\onehubadmin\\src\\Utilities\\constants.js",[],"F:\\Luminogics\\onehubadmin\\src\\Services\\dataService.js",[],"F:\\Luminogics\\onehubadmin\\src\\Redux\\actions\\action.js",[],"F:\\Luminogics\\onehubadmin\\src\\Components\\Products\\Products.jsx",["133","134","135"],"import React, { useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport { NETWORK_ERROR } from \"../../Utilities/constants\";\r\nimport { listProductRequest } from \"../../Services/dataService\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listOfProducts } from \"../../Redux/actions/action\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateProduct from \"./CreateProduct\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nconst Products = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(async () => {\r\n    const token =\r\n      \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InN0YXR1cyI6IkFjdGl2ZSIsIl9pZCI6IjVmMmVmOTZkNWEwOWM1MzUyY2E1NmNkMSIsImVtYWlsIjoiYWRtaW5AeWFob28uY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkY1BaSkxoc3dLSndiaHF5aWJ6TGIwZTh6S05mVFFpcHdieE55L1Uyd25rS3ZIOHhnallsZUMiLCJyb2xlIjoiU3VwZXJBZG1pbiIsImFkZGVkX2RhdGUiOiIyMDIwLTA4LTA4VDE5OjEzOjQ5LjMyNVoiLCJfX3YiOjB9LCJpYXQiOjE2MTE3NTM3NTcsImF1ZCI6ImFkbWluIiwiaXNzIjoibm9kZV9iYWNrZW5kIiwic3ViIjoiYWRtaW5AeWFob28uY29tIn0.Al0uRnNcrAK8GZumRVbMgS1O8buvmZL2mGmnSueyIWSyi4MX0HaRe9oFH9jLLSzDdSR1cAz-NZxdydAHKRYTLg\";\r\n    const productResponse = await listProductRequest(token);\r\n    if (productResponse === NETWORK_ERROR) {\r\n    } else {\r\n      props.listOfProductsHandler(productResponse.data.payload.data);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h2>Products</h2>\r\n        <Link to=\"/CreateProduct\">\r\n        <Button variant=\"contained\" color=\"primary\" style={{'margin-bottom':'5%'}}>\r\n          Add Product\r\n        </Button>\r\n        </Link>\r\n        <Grid container spacing={3}>\r\n          {props.ListProducts.map((list) => (\r\n            <Grid item md={4}>\r\n              <Card className={classes.root} key={Math.random()}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"shoes\"\r\n                    height=\"140\"\r\n                    image=\"https://ashtex-test-bucket.s3.amazonaws.com/shoes.jfif\"\r\n                    title=\"shoes\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {list.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      Product id:{list.product_id}\r\n                      <br />\r\n                      {list.description}\r\n                      <br />\r\n                      Brand: {list.brand}\r\n                      <br />\r\n                      Price: {list.price}\r\n                      <br />\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Edit\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Remove\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ListProducts: state.myReducerOne.listOfProducts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    listOfProductsHandler: (ProductsList) =>\r\n      dispatch(listOfProducts(ProductsList)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n// export default Products\r\n","F:\\Luminogics\\onehubadmin\\src\\Components\\Orders\\Orders.jsx",["136","137"],"import React, { useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport { NETWORK_ERROR } from \"../../Utilities/constants\";\r\nimport { fetchOrdersRequest } from \"../../Services/dataService\";\r\nimport { connect } from \"react-redux\";\r\nimport { listOfOrders } from \"../../Redux/actions/action\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Row = (props) => {\r\n  const { user } = props.row;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {user._id}\r\n        </TableCell>\r\n        <TableCell align=\"right\"> {user.name} </TableCell>\r\n        <TableCell align=\"right\"> {user.phone} </TableCell>\r\n        <TableCell align=\"right\">{props.row.total_price}</TableCell>\r\n        <TableCell align=\"right\">{props.row.date_created}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Customer Details\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell align=\"left\">Quantity</TableCell>\r\n                    <TableCell align=\"left\">Color</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  {props.row.order.map((historyRow) => (\r\n                    <TableRow key={historyRow.brand}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.brand}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.title}</TableCell>\r\n                      <TableCell align=\"left\">{historyRow.quantity}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {\" \"}\r\n                        {historyRow.variants.color}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Orders = (props) => {\r\n  useEffect(async () => {\r\n    const token =\r\n      \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InN0YXR1cyI6IkFjdGl2ZSIsIl9pZCI6IjVmMmVmOTZkNWEwOWM1MzUyY2E1NmNkMSIsImVtYWlsIjoiYWRtaW5AeWFob28uY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkY1BaSkxoc3dLSndiaHF5aWJ6TGIwZTh6S05mVFFpcHdieE55L1Uyd25rS3ZIOHhnallsZUMiLCJyb2xlIjoiU3VwZXJBZG1pbiIsImFkZGVkX2RhdGUiOiIyMDIwLTA4LTA4VDE5OjEzOjQ5LjMyNVoiLCJfX3YiOjB9LCJpYXQiOjE2MTE3NTM3NTcsImF1ZCI6ImFkbWluIiwiaXNzIjoibm9kZV9iYWNrZW5kIiwic3ViIjoiYWRtaW5AeWFob28uY29tIn0.Al0uRnNcrAK8GZumRVbMgS1O8buvmZL2mGmnSueyIWSyi4MX0HaRe9oFH9jLLSzDdSR1cAz-NZxdydAHKRYTLg\";\r\n    const ordersResponse = await fetchOrdersRequest(token);\r\n    if (ordersResponse === NETWORK_ERROR) {\r\n      alert(\"Network Error ...\");\r\n    } else {\r\n      props.listOfOrdersHandler(ordersResponse.data.payload.data);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Orders</h1>\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>Id</TableCell>\r\n                <TableCell align=\"right\">Name</TableCell>\r\n                <TableCell align=\"right\">Phone</TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n                <TableCell align=\"right\">Date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.ListOfOrders.map((orderList) => (\r\n                <Row key={Math.random()} row={orderList} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ListOfOrders: state.myReducerOne.listOfOrders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    listOfOrdersHandler: (OrdersList) => dispatch(listOfOrders(OrdersList)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n// export default Orders;\r\n","F:\\Luminogics\\onehubadmin\\src\\Components\\Products\\CreateProduct.jsx",["138","139","140"],{"ruleId":"141","severity":1,"message":"142","line":7,"column":21,"nodeType":"143","messageId":"144","endLine":7,"endColumn":36},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"141","severity":1,"message":"149","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"145","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"152","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":15},{"ruleId":"141","severity":1,"message":"153","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":11},{"ruleId":"141","severity":1,"message":"154","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":12},{"ruleId":"141","severity":1,"message":"155","line":15,"column":8,"nodeType":"143","messageId":"144","endLine":15,"endColumn":12},{"ruleId":"141","severity":1,"message":"156","line":16,"column":8,"nodeType":"143","messageId":"144","endLine":16,"endColumn":13},{"ruleId":"141","severity":1,"message":"157","line":23,"column":10,"nodeType":"143","messageId":"144","endLine":23,"endColumn":19},{"ruleId":"141","severity":1,"message":"158","line":126,"column":9,"nodeType":"143","messageId":"144","endLine":126,"endColumn":25},{"ruleId":"141","severity":1,"message":"159","line":29,"column":23,"nodeType":"143","messageId":"144","endLine":29,"endColumn":40},{"ruleId":"141","severity":1,"message":"160","line":70,"column":10,"nodeType":"143","messageId":"144","endLine":70,"endColumn":19},{"ruleId":"141","severity":1,"message":"161","line":70,"column":21,"nodeType":"143","messageId":"144","endLine":70,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":27,"column":13,"nodeType":"164","endLine":40,"endColumn":4},{"ruleId":"162","severity":1,"message":"165","line":40,"column":6,"nodeType":"166","endLine":40,"endColumn":8,"suggestions":"167"},{"ruleId":"141","severity":1,"message":"157","line":19,"column":10,"nodeType":"143","messageId":"144","endLine":19,"endColumn":19},{"ruleId":"141","severity":1,"message":"158","line":122,"column":9,"nodeType":"143","messageId":"144","endLine":122,"endColumn":25},{"ruleId":"141","severity":1,"message":"168","line":20,"column":8,"nodeType":"143","messageId":"144","endLine":20,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":31,"column":13,"nodeType":"164","endLine":39,"endColumn":4},{"ruleId":"162","severity":1,"message":"165","line":39,"column":6,"nodeType":"166","endLine":39,"endColumn":8,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"163","line":98,"column":13,"nodeType":"164","endLine":107,"endColumn":4},{"ruleId":"162","severity":1,"message":"165","line":107,"column":6,"nodeType":"166","endLine":107,"endColumn":8,"suggestions":"170"},{"ruleId":"141","severity":1,"message":"171","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":16},{"ruleId":"141","severity":1,"message":"172","line":17,"column":10,"nodeType":"143","messageId":"144","endLine":17,"endColumn":18},{"ruleId":"141","severity":1,"message":"173","line":73,"column":9,"nodeType":"143","messageId":"144","endLine":73,"endColumn":24},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","no-native-reassign",["174"],"no-negated-in-lhs",["175"],"'logo' is defined but never used.",["174"],["175"],"'SideBar' is defined but never used.","'Box' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Copyright' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'fetchOrderSummary' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["176"],"'CreateProduct' is defined but never used.",["177"],["178"],"'colors' is defined but never used.","'Category' is defined but never used.","'variation_color' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"179","fix":"182"},"Update the dependencies array to be: [props]",{"range":"183","text":"184"},{"range":"185","text":"184"},{"range":"186","text":"184"},[1800,1802],"[props]",[1823,1825],[4511,4513]]